{
 "Resources": {
  "weathertable06CF1374": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "zip",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "zip",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/weather_table/Resource"
   }
  },
  "weatherapikey81865B4E": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "weather_api_key"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/weather_api_key/Resource"
   }
  },
  "OpenWeatherMapServiceRole996E3A50": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/OpenWeatherMap/ServiceRole/Resource"
   }
  },
  "OpenWeatherMapServiceRoleDefaultPolicy0DB7AAC0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "weatherapikey81865B4E"
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "weathertable06CF1374",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OpenWeatherMapServiceRoleDefaultPolicy0DB7AAC0",
    "Roles": [
     {
      "Ref": "OpenWeatherMapServiceRole996E3A50"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/OpenWeatherMap/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OpenWeatherMap10BF00AE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0986e1dcd59e2d90a650688f67e9e8ce6f0cca81c18ec762881bce829d135f68.zip"
    },
    "Environment": {
     "Variables": {
      "REGION": {
       "Ref": "AWS::Region"
      },
      "SECRET_NAME": {
       "Fn::Select": [
        0,
        {
         "Fn::Split": [
          "-",
          {
           "Fn::Select": [
            6,
            {
             "Fn::Split": [
              ":",
              {
               "Ref": "weatherapikey81865B4E"
              }
             ]
            }
           ]
          }
         ]
        }
       ]
      },
      "DYNAMO_DB_TABLE": {
       "Ref": "weathertable06CF1374"
      }
     }
    },
    "Handler": "open_weather.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "OpenWeatherMapServiceRole996E3A50",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "OpenWeatherMapServiceRoleDefaultPolicy0DB7AAC0",
    "OpenWeatherMapServiceRole996E3A50"
   ],
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/OpenWeatherMap/Resource",
    "aws:asset:path": "asset.0986e1dcd59e2d90a650688f67e9e8ce6f0cca81c18ec762881bce829d135f68",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OpenWeatherMapInvokepermissionF146E9F1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OpenWeatherMap10BF00AE",
      "Arn"
     ]
    },
    "Principal": "*"
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/OpenWeatherMap/Invoke-permission"
   }
  },
  "openweatherC8C7F6ED": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "openweather"
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/Resource"
   }
  },
  "openweatherDeployment884412B8601f8ac971aaf0631c92218d7a884a54": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "openweatherC8C7F6ED"
    }
   },
   "DependsOn": [
    "openweatherGET0414E382",
    "openweatherOPTIONS9F7534C7"
   ],
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/Deployment/Resource"
   }
  },
  "openweatherDeploymentStageprod42B8DB84": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "openweatherDeployment884412B8601f8ac971aaf0631c92218d7a884a54"
    },
    "RestApiId": {
     "Ref": "openweatherC8C7F6ED"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/DeploymentStage.prod/Resource"
   }
  },
  "openweatherOPTIONS9F7534C7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "openweatherC8C7F6ED",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "openweatherC8C7F6ED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/Default/OPTIONS/Resource"
   }
  },
  "openweatherGETApiPermissionNorcalLnlCdkStack1openweatherD21D83FEGET8E006B54": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OpenWeatherMap10BF00AE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "openweatherC8C7F6ED"
       },
       "/",
       {
        "Ref": "openweatherDeploymentStageprod42B8DB84"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/Default/GET/ApiPermission.NorcalLnlCdkStack1openweatherD21D83FE.GET.."
   }
  },
  "openweatherGETApiPermissionTestNorcalLnlCdkStack1openweatherD21D83FEGET698C8DF2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OpenWeatherMap10BF00AE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "openweatherC8C7F6ED"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/Default/GET/ApiPermission.Test.NorcalLnlCdkStack1openweatherD21D83FE.GET.."
   }
  },
  "openweatherGET0414E382": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "RequestTemplates": {
      "application/json": "{ \"statusCode\": \"200\" }"
     },
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OpenWeatherMap10BF00AE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "openweatherC8C7F6ED",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "openweatherC8C7F6ED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/openweather/Default/GET/Resource"
   }
  },
  "ViewHitCounterRenderedServiceRole254DB4EA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/Rendered/ServiceRole/Resource"
   }
  },
  "ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "weathertable06CF1374",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83",
    "Roles": [
     {
      "Ref": "ViewHitCounterRenderedServiceRole254DB4EA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/Rendered/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ViewHitCounterRendered9C783E45": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d9cdd7bdd784d6248d9a68dc7b1e49029a879f67840bd9cd5a3fd41de8b64c15.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "weathertable06CF1374"
      },
      "TITLE": "Weather Data By Zip Code",
      "SORT_BY": ""
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "ViewHitCounterRenderedServiceRole254DB4EA",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "ViewHitCounterRenderedServiceRoleDefaultPolicy9ADB8C83",
    "ViewHitCounterRenderedServiceRole254DB4EA"
   ],
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/Rendered/Resource",
    "aws:asset:path": "asset.d9cdd7bdd784d6248d9a68dc7b1e49029a879f67840bd9cd5a3fd41de8b64c15",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ViewHitCounterViewerEndpoint5A0EF326": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "ViewerEndpoint"
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Resource"
   }
  },
  "ViewHitCounterViewerEndpointDeployment1CE7C576266844ed68ff13f4c394d641d92ca438": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
    }
   },
   "DependsOn": [
    "ViewHitCounterViewerEndpointproxyANYFF4B8F5B",
    "ViewHitCounterViewerEndpointproxy2F4C239F",
    "ViewHitCounterViewerEndpointANY66F2285B"
   ],
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Deployment/Resource"
   }
  },
  "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ViewHitCounterViewerEndpointDeployment1CE7C576266844ed68ff13f4c394d641d92ca438"
    },
    "RestApiId": {
     "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/DeploymentStage.prod/Resource"
   }
  },
  "ViewHitCounterViewerEndpointproxy2F4C239F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ViewHitCounterViewerEndpoint5A0EF326",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/{proxy+}/Resource"
   }
  },
  "ViewHitCounterViewerEndpointproxyANYApiPermissionNorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6ANYproxy6D044194": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ViewHitCounterRendered9C783E45",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
       },
       "/",
       {
        "Ref": "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/{proxy+}/ANY/ApiPermission.NorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6.ANY..{proxy+}"
   }
  },
  "ViewHitCounterViewerEndpointproxyANYApiPermissionTestNorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6ANYproxyCB7316A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ViewHitCounterRendered9C783E45",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/{proxy+}/ANY/ApiPermission.Test.NorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6.ANY..{proxy+}"
   }
  },
  "ViewHitCounterViewerEndpointproxyANYFF4B8F5B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ViewHitCounterRendered9C783E45",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ViewHitCounterViewerEndpointproxy2F4C239F"
    },
    "RestApiId": {
     "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/{proxy+}/ANY/Resource"
   }
  },
  "ViewHitCounterViewerEndpointANYApiPermissionNorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6ANY04373D2D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ViewHitCounterRendered9C783E45",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
       },
       "/",
       {
        "Ref": "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/ANY/ApiPermission.NorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6.ANY.."
   }
  },
  "ViewHitCounterViewerEndpointANYApiPermissionTestNorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6ANY0ED97505": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ViewHitCounterRendered9C783E45",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/ANY/ApiPermission.Test.NorcalLnlCdkStack1ViewHitCounterViewerEndpoint9372ECE6.ANY.."
   }
  },
  "ViewHitCounterViewerEndpointANY66F2285B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ViewHitCounterRendered9C783E45",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "ViewHitCounterViewerEndpoint5A0EF326",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/ViewHitCounter/ViewerEndpoint/Default/ANY/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02QzU7DMBCEn6V3x5ACEte2iBOIqHCvNvaSuontyD+UKMq7Y29SlNN+6x3PeL3l5dMjLzdw9YWQbdGpmo+fAUTL0tFplIMBbWU6/IK6Q3b4NgQT8ygcBq/BQIMuXaI+C2aaWAe6lsDH12hEUNbk2ZordFp5n7qJKdB8PNo5gWplOyUG0hGlxIcTeJ8y+S6X1PN9FC2GPXhk0KsGAl5hSEbow65X5LXgC/adHTQaeuKqS8s2lDpD0tvoBJLnO4azlXm40ButdPOsnP0dbheWMOJp+vdh9NbsrUyTNR8x9DGs1ZkP1kgV6CuMlcgv/u6nfObllt9vLl6pwkUTlEZ+nOsf+O/Cs7gBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "NorcalLnlCdkStack1/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "openweatherEndpoint057ECD7B": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "openweatherC8C7F6ED"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "openweatherDeploymentStageprod42B8DB84"
      },
      "/"
     ]
    ]
   }
  },
  "ViewHitCounterViewerEndpointCA1B1E4B": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ViewHitCounterViewerEndpoint5A0EF326"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ViewHitCounterViewerEndpointDeploymentStageprodF3901FC7"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}